{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"projects/e_teacher/","title":"eTeacher API","text":""},{"location":"projects/e_teacher/#modelado-de-datos","title":"Modelado de datos","text":"<p>El profesor del I.E.S Mariposa decide crear una app para poder llevar un registro exhaustivo de sus alumnos y dWe las asignaturas que imparte.</p> <p>Para ello, desea almacenar dicha informaci\u00f3n en una API haciendo uso de una base de datos de <code>MongoDB</code>.</p> <p>De las asignaturas almacenar\u00e1 su nombre, una breve descripci\u00f3n de la misma y el a\u00f1o que empez\u00f3 a impartirla.</p> <p>De los alumnos desea almacenar, su DNI, su nombre, sus apellidos, sus n\u00fameros de tel\u00e9fonos, sus emails, la ruta donde se aloja la foto de perfil del usuario, as\u00ed como, su direcci\u00f3n, su fecha de nacimiento y los a\u00f1os que el profesor le ha impartido clases.</p> <p>Se ha de tener en cuenta que un alumno puede estar matriculado en todas las asignaturas que desee, y una asignatura puede contener varios alumnos.</p> <p>El profesor tambi\u00e9n desea almacenar un listado con las notas de cada alumno en cada asignatura, diferenciando entre ex\u00e1menes, trabajos, ejercicios y apuntes. Almacenando tambi\u00e9n la ruta en la que se encuentra dichas actividades, en caso de que sea necesario.</p> <p>El profesor ha decido auto-registrarse como un alumno con privilegios, es decir siendo administrador.</p> <p>Primer ejercicio a entregar</p> <p>Realiza el modelo Entidad Relaci\u00f3n correspondiente a lo descrito anteriormente. Implementa,a dem\u00e1s, tambi\u00e9n el modelo relacional para bases de datos SQL y el modelo de estructura de datos para bases de datos NoSQL.</p>"},{"location":"projects/e_teacher/#logica-de-alumnos-y-usuarios","title":"L\u00f3gica de alumnos y usuarios","text":"<p>Cualquier tipo de usuario (administrador, alumno y persona registrada) podr\u00e1 realizar un login, pero solamente el usuario de tipo administrador podr\u00e1 realizar un registro de alumnos.</p> <p>El usuario podr\u00e1 realizar el login haciendo uso de unas credenciales: nombre de usuario y contrase\u00f1a. El nombre de usuario de un alumno ser\u00eda su DNI, mientras que el nombre de usuario del profesor administrador de la base de datos es admin. Por otro lado, la contrase\u00f1a de un alumno al ser registrado por el profesor, se le autocalcular\u00e1 usando la siguiente estructura:</p> <ul> <li>Primera letra del nombre en may\u00fascula</li> <li>Las tres primeras de cada apellido en min\u00fascula (si tiene uno, pues solo las tres primeras de ese apellido, si tiene m\u00e1s de uno pues las tres primeras letras de cada apellido)</li> <li>Un n\u00famero aleatorio entre 1 y 999, poniendo tantos ceros hasta que ocupe tres d\u00edgitos, por ejemplo, si es 1 pondr\u00eda 001, si es 12 pondr\u00eda 012 y si es 100, se quedar\u00eda as\u00ed.</li> </ul> <p>Por ejemplo: para la alumna Alicia Martinez Blanco su contrase\u00f1a estar\u00eda conformada por <code>Amarbla076</code></p> <p>Para el resto de datos hay que tener en cuenta que:</p> <ul> <li>El DNI, el email y el n\u00famero de tel\u00e9fono debe estar bien formado.</li> <li>El atributo admin es de tipo booleano (<code>true</code> si es el profesor administrador o <code>false</code> si es un alumno corriente)</li> <li>El avatar es la direcci\u00f3n donde se ubica la foto del alumno. Cuando el profesor lo registra, este par\u00e1metro est\u00e1 completamente vac\u00edo.</li> <li>Los a\u00f1os que el profesor le ha impartido clases a un alumno podr\u00e1n ser varios, es decir, puede haber m\u00e1s de un a\u00f1o en el que el profesor a impartido clase a dicho alumno. Debe ser una a\u00f1o valido, conformado desde 2013 (a\u00f1o que comenz\u00f3 el profesor a darle clase), hasta la fecha actual.</li> <li>Los \u00fanicos campos obligatorios para un alumno son:el DNI, el nombre, los apellidos y el email. El resto de campo si no son introducidos deber\u00e1n usar un valor por defecto en cada caso, es decir, las cadenas vac\u00edas, los n\u00fameros 0, las fechas la fecha actual, etc.</li> </ul> <p>Solamente el profesor administrados podr\u00e1 acceder a ver un listado de todos los alumnos, as\u00ed como eliminarlos. Por otro lado, un alumno s\u00ed podr\u00e1 modificar cierta informaci\u00f3n sobre \u00e9l mismo, excepto informaci\u00f3n vulnerable que solo podr\u00e1 ser modificada por el profesor, como los a\u00f1os que se la ha impartido clase a dicho alumno. El DNI es un dato inmutable, es decir, no puede ser modificado, en caso de error, y realizando las validaciones previas, el profesor si puede modificar el DNI.El resto de datos no vulnerables si pueden ser modificados por el alumno.</p> <p>Segundo ejercicio a entregar</p> <p>A trav\u00e9s de NodeJS, y usando el gestor de base de datos MongoDB, realiza las operaciones pertinentes seg\u00fan lo descrito anteriormente, usando obligatoriamente el paquete oficial de mongoDB. Teniendo en cuenta. Se valorar\u00e1:</p> <ul> <li>La limpieza de c\u00f3digo y la legibilidad.</li> <li>La estructuraci\u00f3n correcta y limpia.</li> <li>El comentado de c\u00f3digo</li> <li>El uso de GIT para las versiones.</li> <li>La creaci\u00f3n de una rama para separar el uso de MongoDB de MySQL, y por lo tanto su administraci\u00f3n.</li> <li>La eficacia y reducci\u00f3n de c\u00f3digo, creando clases y librer\u00edas de funciones.</li> <li>La l\u00f3gica seguida para el desarrollo de la actividad.</li> <li>El enrutamiento de la aplicaci\u00f3n.</li> </ul>"}]}